name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          uv pip install --system pre-commit ruff mypy deptry
      - name: Run linting
        run: |
          uv run pre-commit run --all-files
      - name: Run deptry
        run: |
          uv run deptry src

  tests:
    name: Tests (Python ${{ matrix.python-version }} on ${{ matrix.os }})
    needs: linting
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']
        exclude:
          # Exclude some combinations to save CI time
          - os: macos-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.9'

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        shell: bash
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          uv pip install --system .[dev]
      - name: Run tests
        run: |
          uv run pytest --cov=src/finetune --cov-report=xml
      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  security:
    name: Security checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          uv pip install --system bandit safety
      - name: Run bandit
        run: |
          uv run bandit -r src/
      - name: Run safety check
        run: |
          uv run pip freeze | uv run safety check --stdin

  docker:
    name: Docker build
    runs-on: ubuntu-latest
    needs: [tests, security]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: finetune:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
